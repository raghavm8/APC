#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>
struct node {
    
    int data;
    struct node *left;
    struct node *right;
  
};

struct node* insert( struct node* root, int data ) {
        
    if(root == NULL) {
    
        struct node* node = (struct node*)malloc(sizeof(struct node));

        node->data = data;

        node->left = NULL;
        node->right = NULL;
        return node;
      
    } else {
      
        struct node* cur;
        
        if(data <= root->data) {
            cur = insert(root->left, data);
            root->left = cur;
        } else {
            cur = insert(root->right, data);
            root->right = cur;
        }
    
        return root;
    }
}
int max(int a,int b)
{
  return a>b?a:b;
}
int height(struct node* node) 
{ 
  if (node==NULL)  
       return 0; 
   else 
   { 
       int lDepth = height(node->left); 
       int rDepth = height(node->right); 
  
       if (lDepth > rDepth)  
           return(lDepth+1); 
       else return(rDepth+1); 
   } 
}  

int Diameter( struct node *tree) 
{
    if (tree == NULL) 
     return 0; 
  
  int lheight = height(tree->left); 
  int rheight = height(tree->right); 
  
  int ldiameter = Diameter(tree->left); 
  int rdiameter = Diameter(tree->right); 
  
  return max(lheight + rheight + 1, max(ldiameter, rdiameter)); 
}  



int main() {
      struct node* root = NULL;
    
    int t;
    int data;

    scanf("%d", &t);

    while(t-- > 0) {
        scanf("%d", &data);
        root = insert(root, data);
    }
  
    printf("%d",Diameter(root));
    return 0;
}

