// { Driver Code Starts
import java.util.*;

class Find_Difference
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while(t>0)
		{
			int n = sc.nextInt();
			int a[] = new int[n];
			for(int i=0; i<n; i++)
				a[i] = sc.nextInt();
			GfG g = new GfG();
			System.out.println(g.findMaxDiff(a,n));
		t--;
		}
	}
}// } Driver Code Ends
class GfG
{
    int findMaxDiff(int a[], int n)
    {
	    int l[] = new int[n];
	    int r[] = new int[n];
	    for(int i=0;i<n;i++)
	    {
	        l[i] = 0;
	        r[i] = 0;
	    }
	    int i=0;
	    Stack<Integer> s = new Stack<Integer>();
	    s.push(a[i]);
	    for(i=1;i<n;i++)
	    {
	      if(a[i]>s.peek())
	      {
	          l[i] = s.peek();
	          s.push(a[i]);
	      }
	      else
	      {
	          s.pop();
	          while(s.empty()==false)
	          {
	              if(a[i]>s.peek())
	              {
	                  l[i]=s.peek();
	                  break;
	              }
	              else
	              s.pop();
	          }
	          s.push(a[i]);
	      }
	    }
        int j=n-1;
        s.clear();
        s.push(a[j]);
	    for(j=n-2;j>=0;j--)
	    {
	       if(a[j]>s.peek())
	       {
	           r[j] = s.peek();
	           s.push(a[j]);
	       }
	       else
	       {
	           s.pop();
	           while(s.empty()==false)
	           {
	               if(a[j]>s.peek())
	               {
	                   r[j]=s.peek();
	                   break;
	               }
	               else
	               s.pop();
	           }
	           s.push(a[j]);
	       }
	    }
	 /*  for(i=0;i<n;i++)
	       System.out.println("l = " + l[i] + " r = " + r[i]); */
	    int ans,max=0;
	    for(i=0;i<n;i++)
	    {
	        ans = Math.abs(l[i]-r[i]);
	        if(max<ans)
	        max = ans;
	    }
	    return max;
    }
}